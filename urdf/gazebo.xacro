<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Center of buoyancy -->
    <xacro:property name="O_29qt_cob" value="0 0 0"/>

    <!-- Vehicle's actual volume (Gazebo cannot compute the volume out of the mesh) -->
    <!--<xacro:property name="O_29qt_volume" value="${4690 / 1000}"/>-->
    <xacro:property name="O_29qt_volume" value="${4390 / 1000}"/>

    <!-- Added base parameters -->
    <xacro:property name="O_29qt_length" value="8.534"/>
    <xacro:property name="O_29qt_width"  value="1.6568"/>
    <xacro:property name="O_29qt_radius"  value="0.5128"/>
    <xacro:property name="O_29qt_height" value="1.5749"/>
    
    <xacro:property name="rho" value="1025" />
    <xacro:property name="D0" value="${rho * 0.5}"/>
    <xacro:property name="D1" value="${D0 * O_29qt_length}"/>
    <xacro:property name="D2" value="${D1 * O_29qt_length}"/>
    <xacro:property name="D3" value="${D2 * O_29qt_length}"/>
    <xacro:property name="D4" value="${D3 * O_29qt_length}"/>
    <xacro:property name="D5" value="${D4 * O_29qt_length}"/>
    <xacro:property name="D00" value="0.7159"/>
    <xacro:property name="D04" value="0.2627"/>

    <xacro:property name="xudot" value="-0.000949"/>
    <xacro:property name="xvdot" value="0.0"/>
    <xacro:property name="xwdot" value="0.0"/>
    <xacro:property name="xpdot" value="0.0"/>
    <xacro:property name="xqdot" value="0.0"/>
    <xacro:property name="xrdot" value="0.0"/>

    <xacro:property name="yudot" value="0.0"/>
    <xacro:property name="yvdot" value="-0.0408"/>
    <xacro:property name="ywdot" value="0.0"/>
    <xacro:property name="ypdot" value="0.000547"/>
    <xacro:property name="yqdot" value="0.0"/>
    <xacro:property name="yrdot" value="0.00139"/>
     
    <xacro:property name="zudot" value="0.0"/>
    <xacro:property name="zvdot" value="0.0"/>
    <xacro:property name="zwdot" value="-0.0226"/>
    <xacro:property name="zpdot" value="0.0"/>
    <xacro:property name="zqdot" value="-0.0000510"/>
    <xacro:property name="zrdot" value="0.0"/>
                 
    <xacro:property name="kudot" value="0.0"/>
    <xacro:property name="kvdot" value="0.000547"/>
    <xacro:property name="kwdot" value="0.0"/>
    <xacro:property name="kpdot" value="-0.000105"/>
    <xacro:property name="kqdot" value="0.0"/>
    <xacro:property name="krdot" value="-0.00000370"/>
     
    <xacro:property name="mudot" value="0.0"/>
    <xacro:property name="mvdot" value="0.0"/>
    <xacro:property name="mwdot" value="-0.0000510"/>
    <xacro:property name="mpdot" value="0.0"/>
    <xacro:property name="mqdot" value="-0.00175"/>
    <xacro:property name="mrdot" value="0.0"/>
     
    <xacro:property name="nudot" value="0.0"/>
    <xacro:property name="nvdot" value="0.00139"/>
    <xacro:property name="nwdot" value="0.0"/>
    <xacro:property name="npdot" value="-0.00000370"/>
    <xacro:property name="nqdot" value="0.0"/>
    <xacro:property name="nrdot" value="-0.00183"/>
                      
    <!-- Damping -->
    <xacro:property name="xuu" value="-0.00315"/>
    <xacro:property name="xuv" value="0.0"/>
    <xacro:property name="xuw" value="0.0"/>
    <xacro:property name="xup" value="0.0"/>
    <xacro:property name="xuq" value="0.0"/>
    <xacro:property name="xur" value="0.0"/>

    <xacro:property name="yuu" value="0.0"/>
    <xacro:property name="yuv" value="-0.099"/>
    <xacro:property name="yuw" value="0.0"/>
    <xacro:property name="yup" value="0.00677"/>
    <xacro:property name="yuq" value="0.0"/>
    <xacro:property name="yur" value="0.0250"/>
    
    <xacro:property name="zuu" value="0.0"/>
    <xacro:property name="zuv" value="0.0"/>
    <xacro:property name="zuw" value="-0.067"/>
    <xacro:property name="zup" value="0.0"/>
    <xacro:property name="zuq" value="-0.00658"/>
    <xacro:property name="zur" value="0.0"/>
    
    <xacro:property name="kuu" value="0.0"/>
    <xacro:property name="kuv" value="0.00406"/>
    <xacro:property name="kuw" value="0.0"/>
    <xacro:property name="kup" value="-0.00145"/>
    <xacro:property name="kuq" value="0.0"/>
    <xacro:property name="kur" value="-0.000578"/>
    
    <xacro:property name="muu" value="0.0"/>
    <xacro:property name="muv" value="0.0"/>
    <xacro:property name="muw" value="0.00120"/>
    <xacro:property name="mup" value="0.0"/>
    <xacro:property name="muq" value="-0.00687"/>
    <xacro:property name="mur" value="0.0"/>
    
    <xacro:property name="nuu" value="0.0"/>
    <xacro:property name="nuv" value="-0.005"/>
    <xacro:property name="nuw" value="0.0"/>
    <xacro:property name="nup" value="0.000086"/>
    <xacro:property name="nuq" value="0.0"/>
    <xacro:property name="nur" value="-0.00747"/>

    <!-- Model setting -->
    <xacro:macro name="O_29qt_hydro_model" params="namespace">
      <!-- List of hydrodynamic models this robot's links -->
      <link name="${namespace}/base_link">
        <!-- This flag will make the link neutrally buoyant -->
        <neutrally_buoyant>0</neutrally_buoyant>

        <!-- Link's volume -->
        <volume>${O_29qt_volume}</volume>

        <!-- Link's bounding box, it is used to recalculate the immersed
        volume when close to the surface.
        This is a workaround the invalid bounding box given by Gazebo-->
        <box>
          <width>${O_29qt_width}</width>
          <length>${O_29qt_length}</length>
          <height>${O_29qt_height}</height>
        </box>


        <!-- Center of buoyancy -->
        <center_of_buoyancy>${O_29qt_cob}</center_of_buoyancy>

        <!-- 1) Fossen's equation of motion -->
        <hydrodynamic_model>
          <type>fossen</type>
          <added_mass>
              ${xudot*D3*0.1}      ${xvdot*D3*0.1}       ${xwdot*D3*0.1}       ${xpdot*D4*0.1}      ${xqdot*D4*0.1}      ${-xrdot*D4*0.1}
              ${yudot*D3*0.1}      ${yvdot*D3*0.1}       ${ywdot*D3*0.1}       ${ypdot*D4*0.1}      ${yqdot*D4*0.1}      ${-yrdot*D4*0.1}
              ${zudot*D3*0.1}      ${zvdot*D3*0.1}       ${zwdot*D3*0.1}       ${zpdot*D4*0.1}      ${zqdot*D4*0.1}      ${-zrdot*D4*0.1}
              ${kudot*D4*0.1}      ${kvdot*D4*0.1}       ${kwdot*D4*0.1}       ${kpdot*D5*0.1}      ${kqdot*D5*0.1}      ${-krdot*D5*0.1}
              ${mudot*D4*0.1}      ${mvdot*D4*0.1}       ${mwdot*D4*0.1}       ${mpdot*D5*0.1}      ${mqdot*D5*0.1}      ${-mrdot*D5*0.1}
              ${nudot*D4*0.1}      ${nvdot*D4*0.1}       ${nwdot*D4*0.1}       ${npdot*D5*0.1}      ${nqdot*D5*0.1}      ${-nrdot*D5*0.1}
          </added_mass>
          <!--<added_mass>
              ${xudot*D3*0.1}            0.0                   0.0                  0.0                  0.0                    0.0
                    0.0            ${yvdot*D3*0.1}             0.0                  0.0                  0.0             ${-yrdot*D4*0.1}
                    0.0                  0.0             ${zwdot*D3*0.1}            0.0             ${zqdot*D4*0.1}             0.0
                    0.0                  0.0                   0.0             ${kpdot*D5*0.1}           0.0                    0.0
                    0.0                  0.0             ${mwdot*D4*0.1}            0.0             ${mqdot*D5*0.1}             0.0
                    0.0            ${nvdot*D4*0.1}             0.0                  0.0                  0.0             ${-nrdot*D5*0.1}
          </added_mass>-->
          <!--
            The linear damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
          -->
          <linear_damping>
            0      0      0      0      0      0
            0      0      0      0      0      0
            0      0      0      0      0      0
            0      0      0      0      0      0
            0      0      0      0      0      0
            0      0      0      0      0      0
          </linear_damping>
          <!--
            The linear damping coefficients proportional to the forward speed
            can be provided as a diagonal (6 elements) or a full matrix (36 coefficients),
            like the added-mass coefficients above.
            This matrix is mostly useful for slender bodies (e.g. AUVs with torpedo shape)
          -->
          <linear_damping_forward_speed>
            ${xuu*D2}      ${xuv*D2}       ${xuw*D2}       ${xup*D3}      ${xuq*D3}      ${xur*D3}
            ${yuu*D2}      ${yuv*D2}       ${yuw*D2}       ${yup*D3}      ${yuq*D3}      ${yur*D3}
            ${zuu*D2}      ${zuv*D2}       ${zuw*D2}       ${zup*D3}      ${zuq*D3}      ${zur*D3}
            ${kuu*D3}      ${kuv*D3}       ${kuw*D3}       ${kup*D4}      ${kuq*D4}      ${kur*D4}
            ${muu*D3}      ${muv*D3}       ${muw*D3}       ${mup*D4}      ${muq*D4}      ${mur*D4}
            ${nuu*D3}      ${nuv*D3}       ${nuw*D3}       ${nup*D4}      ${nuq*D4}      ${nur*D4}
          </linear_damping_forward_speed>
          <!--<linear_damping_forward_speed>
            ${xuu*D2}         0.0             0.0             0.0             0.0            0.0
                0.0        ${yuv*D2}          0.0             0.0             0.0        ${yur*D3}
                0.0           0.0          ${zuw*D2}          0.0         ${zuq*D3}          0.0
                0.0           0.0             0.0          ${kup*D4}          0.0            0.0
                0.0           0.0          ${muw*D3}          0.0         ${muq*D4}          0.0
                0.0        ${nuv*D3}          0.0             0.0             0.0        ${nur*D4}
          </linear_damping_forward_speed>-->
          <!--
            The quadratic damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
          -->
          <!--<quadratic_damping>
            ${xuu*D2}      ${xuv*D2}       ${xuw*D2}       ${xup*D3}      ${xuq*D3}      ${xur*D3}
            ${yuu*D2}      ${yuv*D2}       ${yuw*D2}       ${yup*D3}      ${yuq*D3}      ${yur*D3}
            ${zuu*D2}      ${zuv*D2}       ${zuw*D2}       ${zup*D3}      ${zuq*D3}      ${zur*D3}
            ${kuu*D3}      ${kuv*D3}       ${kuw*D3}       ${kup*D4}      ${kuq*D4}      ${kur*D4}
            ${muu*D3}      ${muv*D3}       ${muw*D3}       ${mup*D4}      ${muq*D4}      ${mur*D4}
            ${nuu*D3}      ${nuv*D3}       ${nuw*D3}       ${nup*D4}      ${nuq*D4}      ${nur*D4}
          </quadratic_damping>-->
        </hydrodynamic_model>
      </link>
    </xacro:macro>
</robot>
