<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="propeller_mesh_file" value="file://$(find O_29qt)/meshes/propeller.STL" />
    
    <xacro:macro name="thruster_macro" params="robot_namespace thruster_id *origin">
        <link name="${robot_namespace}/thruster_${thruster_id}">
            <visual>
                <geometry>
                    <mesh filename="${propeller_mesh_file}" scale="1 1 1" />
                </geometry>
            </visual>

            <inertial>
                <mass value="0.001" />
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia ixx="0.000000001" ixy="0.0" ixz="0.0"
                    iyy="0.000000001" iyz="0.0"
                    izz="0.000000001" />
            </inertial>
        </link>

        <joint name="${robot_namespace}/thruster_${thruster_id}_joint" type="continuous">
            <xacro:insert_block name="origin" />
            <axis xyz="1 0 0" />
            <parent link="${robot_namespace}/base_link" />
            <child link="${robot_namespace}/thruster_${thruster_id}" />
        </joint>

        <gazebo>
            <!-- Thruster ROS plugin -->
            <plugin name="${robot_namespace}_${thruster_id}_thruster_model" filename="libuuv_thruster_ros_plugin.so">
                <!-- Name of thruster link -->
                <linkName>${robot_namespace}/thruster_${thruster_id}</linkName>
                
                <!-- Name of the joint between thruster and vehicle base link -->
                <jointName>${robot_namespace}/thruster_${thruster_id}_joint</jointName>
                
                <!-- Make the thruster aware of its own id -->
                <thrusterID>${thruster_id}</thrusterID>
                
                <!-- Gain of the input command signal -->
                <gain>1</gain>
                
                <!-- Maximum allowed input value for the input signal for thruster unit -->
                <clampMax>2500</clampMax>
                
                <!-- Minimum allowed input value for the input signal for thruster unit -->
                <clampMin>-2500</clampMin>
                
                <!-- Maximum thrust force output allowed -->
                <thrustMax>26338.811</thrustMax>
                
                <!-- Minimum thrust force output allowed -->
                <thrustMin>-26338.811</thrustMin>
                
                <!--
                Value from 0 to 1 to set the efficiency of the output thrus
                Default value is 1.0
                -->
                <thruster_efficiency>1</thruster_efficiency>
                
                <!--
                Value from 0 to 1 to set the efficiency of the propeller a
                to be multiplied to the current value of the state variabl
                iteration.
                Default value is 1.0
                -->
                <propeller_efficiency>1</propeller_efficiency>
                
                <dynamics>
                    <type>FirstOrder</type>
                    <timeConstant>0.05</timeConstant>
                </dynamics>
                
                <!-- <conversion>
                    <type>Basic</type>
                    <rotorConstant>0.0002</rotorConstant>
                </conversion> -->
                
                <!-- Linear interpolation
                If you have access to the thruster's data sheet, for examp
                you can enter samples of the curve's input and output valu
                and the thruster output will be found through linear inter
                of the given samples.
                -->
                <!--<conversion>
                    <type>Basic</type>
                    <rotorConstant>0.1</rotorConstant>
                </conversion>-->
                <conversion>
                    <type>LinearInterp</type>
                    <inputValues>0 500 1000 1500 2000 2500</inputValues>
                    <outputValues>0 1053.5524 4214.2097 9481.9719 16856.839 26338.811</outputValues>
                </conversion>

            </plugin>
        </gazebo>

        <gazebo reference="${robot_namespace}/thruster_${thruster_id}">
            <selfCollide>false</selfCollide>
        </gazebo>
    </xacro:macro>    

    <!-- MACRO FOR FIN/RUDDER UNITS  -->

  <!-- A separate mesh for the fin should be stored in the meshes folder -->
  <xacro:property name="front_fin_mesh_file" value="file://$(find O_29qt)/meshes/front_fin_latest.STL"/>
  <!--<xacro:property name="front_fin_mesh_file" value="file://$(find armsauv_description)/meshes/front_fin.dae"/>-->
  <xacro:property name="aft_fin_mesh_file" value="file://$(find O_29qt)/meshes/aft_fin_latest.STL"/>
  <!--<xacro:property name="aft_fin_mesh_file" value="file://$(find armsauv_description)/meshes/aft_fin.dae"/>-->

  <!-- Fin properties -->
  <xacro:property name="fin_rho" value="1025"/>

  <!--<xacro:property name="front_fin_area" value="2.9153726"/>-->
  <!--<xacro:property name="front_fin_area" value="0.0127"/>-->
  <xacro:property name="front_fin_area" value="0.116615"/>
  <!--<xacro:property name="front_fin_lift_coefficient" value="1.668475641"/>-->
  <xacro:property name="front_fin_lift_coefficient" value="3.416017484"/>
  <xacro:property name="front_fin_drag_coefficient" value="0.26542681"/>

  <xacro:macro name="front_fin_macro" params="namespace fin_id *origin mesh_filename">
      <!--<xacro:fin_quadratic_macro
        namespace="${namespace}"
        parent_link="${namespace}/base_link" fin_id="${fin_id}"
        min_joint_limit="${-90.0 * d2r}"
        max_joint_limit="${90.0 * d2r}"
        mesh_filename="${mesh_filename}"
        fin_dynamics_time_constant="0.2"
        lift_constant="${0.5 * fin_rho * front_fin_area * front_fin_lift_coefficient}"
        drag_constant="${0.5 * fin_rho * front_fin_area * front_fin_drag_coefficient}"
        current_velocity_topic="current_velocity">
        <xacro:insert_block name="origin"/>
      </xacro:fin_quadratic_macro>-->

      <link name="${namespace}/fin${fin_id}">
          <xacro:no_inertial/>
          <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                  <mesh filename="${mesh_filename}" scale="1 1 1"/>
              </geometry>
          </visual>
      </link>

      <joint name="${namespace}/fin${fin_id}_joint" type="revolute">
          <limit effort="0" lower="${-90*d2r}" upper="${90*d2r}" velocity="0"/>
          <xacro:insert_block name="origin"/>
          <axiz xyz="0 0 1"/>
          <parent link="${namespace}/base_link"/>
          <child link="${namespace}/fin${fin_id}"/>
      </joint>

      <gazebo>
          <plugin name="${namespace}_fin${fin_id}_model" filename="libuuv_fin_ros_plugin.so">
              <dynamics>
                  <type>FirstOrder</type>
                  <timeConstant>0.2</timeConstant>
              </dynamics>
              <liftdrag>
                  <type>Quadratic</type>
                  <lift_constant>${0.5 * fin_rho * front_fin_area * front_fin_lift_coefficient}</lift_constant>
                  <drag_constant>${0.5 * fin_rho * front_fin_area * front_fin_drag_coefficient}</drag_constant>
              </liftdrag>
              <current_velocity_topic>current_velocity</current_velocity_topic>
              <fin_id>${fin_id}</fin_id>
              <link_name>${namespace}/fin${fin_id}</link_name>
              <joint_name>${namespace}/fin${fin_id}_joint</joint_name>
          </plugin>
      </gazebo>
  </xacro:macro>

  <!--<xacro:property name="aft_fin_area" value="2.656049"/>-->
  <!--<xacro:property name="aft_fin_area" value="0.0172"/>-->
  <xacro:property name="aft_fin_area" value="0.106243"/>
  <!--<xacro:property name="aft_fin_lift_coefficient" value="1.74975211"/>-->
  <xacro:property name="aft_fin_lift_coefficient" value="3.290443227"/>
  <xacro:property name="aft_fin_drag_coefficient" value="0.269448395"/>

  <xacro:macro name="aft_fin_macro" params="namespace fin_id *origin mesh_filename">
      <!--<xacro:fin_quadratic_macro
        namespace="${namespace}"
        parent_link="${namespace}/base_link"
        fin_id="${fin_id}"
        min_joint_limit="${-90.0 * d2r}"
        max_joint_limit="${90.0 * d2r}"
        mesh_filename="${mesh_filename}"
        fin_dynamics_time_constant="0.2"
        lift_constant="${0.5 * fin_rho * aft_fin_area * aft_fin_lift_coefficient}"
        drag_constant="${0.5 * fin_rho * aft_fin_area * aft_fin_drag_coefficient}"
        current_velocity_topic="current_velocity">
        <xacro:insert_block name="origin"/>
      </xacro:fin_quadratic_macro>-->
      <link name="${namespace}/fin${fin_id}">
          <xacro:no_inertial/>
          <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                  <mesh filename="${mesh_filename}" scale="1 1 1"/>
              </geometry>
          </visual>
      </link>

      <joint name="${namespace}/fin${fin_id}_joint" type="revolute">
          <limit effort="0" lower="${-90*d2r}" upper="${90*d2r}" velocity="0"/>
          <xacro:insert_block name="origin"/>
          <axiz xyz="0 0 1"/>
          <parent link="${namespace}/base_link"/>
          <child link="${namespace}/fin${fin_id}"/>
      </joint>

      <gazebo>
          <plugin name="${namespace}_fin${fin_id}_model" filename="libuuv_fin_ros_plugin.so">
              <dynamics>
                  <type>FirstOrder</type>
                  <timeConstant>0.2</timeConstant>
              </dynamics>
              <liftdrag>
                  <type>Quadratic</type>
                  <lift_constant>${0.5 * fin_rho * front_fin_area * front_fin_lift_coefficient}</lift_constant>
                  <drag_constant>${0.5 * fin_rho * front_fin_area * front_fin_drag_coefficient}</drag_constant>
              </liftdrag>
              <current_velocity_topic>current_velocity</current_velocity_topic>
              <fin_id>${fin_id}</fin_id>
              <link_name>${namespace}/fin${fin_id}</link_name>
              <joint_name>${namespace}/fin${fin_id}_joint</joint_name>
          </plugin>
      </gazebo>
  </xacro:macro>

  <!-- <xacro:macro name="fin_macro" params="namespace fin_id *origin mesh_filename">
      <xacro:fin_two_lines_macro
        namespace="${namespace}"
        parent_link="${namespace}/base_link"
        fin_id="${fin_id}"
        min_joint_limit="${-80*d2r}"
        max_joint_limit="${80*d2r}"
        mesh_filename="${mesh_filename}"
        fin_dynamics_time_constant="0.1"
        fin_cross_section_area="${fin_area}"
        current_velocity_topic="current_velocity"
        fluid_density="1025.0"
        a0="0.0"
        alpha_stall="1.57"
        cla="${0.5 * fin_rho * fin_area * fin_lift_coefficient}"
        cla_stall="0.0"
        cda="${0.5 * fin_rho * fin_area * fin_drag_coefficient}"
        cda_stall="0">
        <xacro:insert_block name="origin"/>
      </xacro:fin_two_lines_macro>
    </xacro:macro> -->

    <!-- <xacro:macro name="fin_macro" params="namespace fin_id *origin mesh_filename">
      <xacro:fin_two_lines_macro
        namespace="${namespace}"
        parent_link="${namespace}/base_link"
        fin_id="${fin_id}"
        min_joint_limit="${-80*d2r}"
        max_joint_limit="${80*d2r}"
        mesh_filename="${mesh_filename}"
        fin_dynamics_time_constant="0.1"
        fin_cross_section_area="${fin_area}"
        current_velocity_topic="current_velocity"
        fluid_density="1025.0"
        a0="0.0"
        alpha_stall="0.436332313"
        cla="2.435070629"
        cla_stall="0"
        cda="0"
        cda_stall="0">
        <xacro:insert_block name="origin"/>
      </xacro:fin_two_lines_macro>
    </xacro:macro> -->

    <!-- cla_stall="-1.929963096"
        cda="1.101841914" -->
</robot>
